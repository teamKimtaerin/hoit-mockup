name: Deploy to S3

on:
  push:
    branches:
      - main

jobs:
  deploy:
    name: Deploy to AWS S3
    runs-on: ubuntu-latest

    steps:
      # 1. ÏΩîÎìú Ï≤¥ÌÅ¨ÏïÑÏõÉ
      - name: Checkout code
        uses: actions/checkout@v4

      # 2. Node.js ÏÑ§Ï†ï
      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '20'
          cache: 'yarn'

      # 3. ÏùòÏ°¥ÏÑ± ÏÑ§Ïπò
      - name: Install dependencies
        run: yarn install --frozen-lockfile

      # 4. ÌôòÍ≤Ω Î≥ÄÏàò ÌååÏùº ÏÉùÏÑ±
      - name: Create .env file
        run: |
          echo "FRONTEND_PORT=3000" >> .env
          echo "NEXT_PUBLIC_FRONTEND_URL=${{ secrets.NEXT_PUBLIC_FRONTEND_URL }}" >> .env
          echo "NEXT_PUBLIC_API_URL=${{ secrets.NEXT_PUBLIC_API_URL }}" >> .env
          echo "NEXT_PUBLIC_MOTIONTEXT_PLUGIN_ORIGIN=${{ secrets.NEXT_PUBLIC_MOTIONTEXT_PLUGIN_ORIGIN }}" >> .env
          echo "NEXT_PUBLIC_AWS_BEDROCK_ACCESS_KEY_ID=${{ secrets.NEXT_PUBLIC_AWS_BEDROCK_ACCESS_KEY_ID }}" >> .env
          echo "NEXT_PUBLIC_AWS_BEDROCK_SECRET_ACCESS_KEY=${{ secrets.NEXT_PUBLIC_AWS_BEDROCK_SECRET_ACCESS_KEY }}" >> .env
          echo "NEXT_PUBLIC_CLAUDE_MODEL_ID=${{ secrets.NEXT_PUBLIC_CLAUDE_MODEL_ID }}" >> .env
          echo "NEXT_PUBLIC_CHATBOT_MAX_TOKENS=${{ secrets.NEXT_PUBLIC_CHATBOT_MAX_TOKENS }}" >> .env
          echo "NEXT_PUBLIC_CHATBOT_TEMPERATURE=${{ secrets.NEXT_PUBLIC_CHATBOT_TEMPERATURE }}" >> .env
          echo "NEXT_PUBLIC_DEBUG_UI=${{ secrets.NEXT_PUBLIC_DEBUG_UI }}" >> .env
          echo "NEXT_PUBLIC_USE_MOCK_DATA=${{ secrets.NEXT_PUBLIC_USE_MOCK_DATA }}" >> .env
          echo "NEXT_PUBLIC_GOOGLE_FONTS_API_KEY=${{ secrets.NEXT_PUBLIC_GOOGLE_FONTS_API_KEY }}" >> .env
          echo "NEXT_PUBLIC_REQUEST_TEST=${{ secrets.NEXT_PUBLIC_REQUEST_TEST }}" >> .env
          echo "AWS_BEDROCK_REGION=${{ secrets.AWS_BEDROCK_REGION }}" >> .env

      # 5. Next.js ÎπåÎìú
      - name: Build application
        run: yarn build
        env:
          NEXT_PUBLIC_API_URL: ${{ secrets.NEXT_PUBLIC_API_URL }}
          NEXT_PUBLIC_FRONTEND_URL: ${{ secrets.NEXT_PUBLIC_FRONTEND_URL }}
          NEXT_PUBLIC_MOTIONTEXT_PLUGIN_ORIGIN: ${{ secrets.NEXT_PUBLIC_MOTIONTEXT_PLUGIN_ORIGIN }}
          NEXT_PUBLIC_AWS_BEDROCK_ACCESS_KEY_ID: ${{ secrets.NEXT_PUBLIC_AWS_BEDROCK_ACCESS_KEY_ID }}
          NEXT_PUBLIC_AWS_BEDROCK_SECRET_ACCESS_KEY: ${{ secrets.NEXT_PUBLIC_AWS_BEDROCK_SECRET_ACCESS_KEY }}
          NEXT_PUBLIC_CLAUDE_MODEL_ID: ${{ secrets.NEXT_PUBLIC_CLAUDE_MODEL_ID }}
          NEXT_PUBLIC_CHATBOT_MAX_TOKENS: ${{ secrets.NEXT_PUBLIC_CHATBOT_MAX_TOKENS }}
          NEXT_PUBLIC_CHATBOT_TEMPERATURE: ${{ secrets.NEXT_PUBLIC_CHATBOT_TEMPERATURE }}
          NEXT_PUBLIC_DEBUG_UI: ${{ secrets.NEXT_PUBLIC_DEBUG_UI }}
          NEXT_PUBLIC_USE_MOCK_DATA: ${{ secrets.NEXT_PUBLIC_USE_MOCK_DATA }}
          NEXT_PUBLIC_GOOGLE_FONTS_API_KEY: ${{ secrets.NEXT_PUBLIC_GOOGLE_FONTS_API_KEY }}
          NEXT_PUBLIC_REQUEST_TEST: ${{ secrets.NEXT_PUBLIC_REQUEST_TEST }}
          AWS_BEDROCK_REGION: ${{ secrets.AWS_BEDROCK_REGION }}

      # 6. AWS ÏûêÍ≤© Ï¶ùÎ™Ö ÏÑ§Ï†ï
      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v4
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: ${{ secrets.AWS_REGION }}

      # 7. S3Ïóê Î∞∞Ìè¨
      - name: Deploy to S3
        run: |
          aws s3 sync ./out s3://${{ secrets.S3_BUCKET_NAME }} \
            --delete \
            --cache-control "public, max-age=31536000, immutable" \
            --exclude "*.html" \
            --exclude "_next/data/*" \
            --exclude "_next/static/chunks/pages/*"

          # HTML ÌååÏùºÏùÄ Ï∫êÏã± ÏóÜÏù¥ ÏóÖÎ°úÎìú
          aws s3 sync ./out s3://${{ secrets.S3_BUCKET_NAME }} \
            --delete \
            --cache-control "public, max-age=0, must-revalidate" \
            --exclude "*" \
            --include "*.html" \
            --include "_next/data/*" \
            --include "_next/static/chunks/pages/*"

      # 8. CloudFront Ï∫êÏãú Î¨¥Ìö®Ìôî
      - name: Invalidate CloudFront
        continue-on-error: true
        run: |
          if [ -n "${{ secrets.CLOUDFRONT_DISTRIBUTION_ID }}" ]; then
            aws cloudfront create-invalidation \
              --distribution-id ${{ secrets.CLOUDFRONT_DISTRIBUTION_ID }} \
              --paths "/*"
          else
            echo "CloudFront distribution ID not set, skipping cache invalidation"
          fi

      # 9. Î∞∞Ìè¨ ÏÑ±Í≥µ ÏïåÎ¶º
      - name: Deployment Success
        if: success()
        run: |
          echo "‚úÖ Successfully deployed to S3!"
          echo "üåê URL: https://${{ secrets.CLOUDFRONT_DOMAIN }}"

      # 10. Î∞∞Ìè¨ Ïã§Ìå® Ïãú ÏïåÎ¶º
      - name: Deployment Failure
        if: failure()
        run: |
          echo "‚ùå Deployment failed!"
          exit 1
